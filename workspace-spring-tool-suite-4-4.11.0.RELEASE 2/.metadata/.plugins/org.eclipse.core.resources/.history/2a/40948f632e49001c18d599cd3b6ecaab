package com.dbs.springbootjdbctemplate;

import java.util.List;
import java.util.Optional;

import javax.sql.DataSource;

import org.springframework.boot.SpringApplication;
import org.springframework.boot.autoconfigure.SpringBootApplication;
import org.springframework.context.ApplicationContext;

import com.dbs.springbootjdbctemplate.dto.Employee;
import com.dbs.springbootjdbctemplate.service.EmployeeService;

@SpringBootApplication
public class SpringbootJdbctemplateApplication {

	public static void main(String[] args) {
	ApplicationContext applicationContext =	SpringApplication.run(SpringbootJdbctemplateApplication.class, args);
	DataSource dataSource  = applicationContext.getBean(DataSource.class);
	System.out.println(dataSource!=null);
	
	EmployeeService employeeService = applicationContext.getBean(EmployeeService.class);
	Employee employee = new Employee(12,"Anus","G","abc",100.0f);
	Employee employee1 = employeeService.CreateEmployee(employee);
	System.out.println(employee1);
	

	
	Optional<Employee> optional = employeeService.getEmployeeById(1);
	
if(optional.isPresent())
	{
		System.out.println(optional.get());
	}
	
	else
		System.out.println("record not found");
	
	
	
	/*Optional<List<Employee>> optional = employeeService.getEmployees();
	if(optional.isPresent())
	{
		System.out.println(optional.get());
	}
	
	else
		System.out.println("record not found");
	
	}*/
	
Optional<List<Employee>> optional2 = employeeService.getEmployeesByLastName("G");
System.out.println(optional2);
	if(optional2.isPresent())
	{
		System.out.println(optional2.get());
	}
	
	else {
		System.out.println("record not found");
	}
	System.out.println("lastname");

	Optional<Employee> optional3= employeeService.getEmployeesByIdAndLastName(12, "G");
	if(optional3.isPresent())
	{
		System.out.println(optional3.get());
	}
	
	else {
		System.out.println("record not found");
	}
	
	
}
}
